{"version":3,"sources":["Apfco.js","IFormFile.js","ViewHomeEntryForm.js","ViewSharedLayoutPrimary.js"],"names":["Apfco","[object Object]","key","value","url","window","location","href","hash","re","RegExp","test","replace","split","separator","indexOf","milliseconds","Promise","resolve","setTimeout","inputString","findString","replaceString","IFormFile","target","thisObj","this","el","$","elTable","document","getElementById","id","elType","getAttribute","elMaximum","elProgress","elRequired","attr","change","e","getElementsByTagName","querySelectorAll","length","file","files","data","FormData","append","Action_uploadfile","click","val","css","i","on","event","Action_deletefile","HTML_updatebutton","prop","token","ajax","xhr","XMLHttpRequest","addClass","upload","addEventListener","evt","lengthComputable","percentComplete","loaded","total","type","GLOBALROOTURL","processData","contentType","success","response","HTML_addfiletotable","removeClass","error","ajaxOptions","thrownError","alert","responseText","tableRow","table","deleteRow","rows","insertRow","outerHTML","HTML_updaterows","cells","innerHTML","trim","get","name","firstChild","toString","off","count","IFormFileList","elementsByClass","getElementsByClassName","push","item","ViewHomeEntryForm","console","log","sleep","ViewHomeEntryFormList","body","classList","contains","ViewSharedLayoutPrimary","disableFormButtonsOnSubmit","wrapTrademarkSymbolsWithSuperscriptTag","find","each","submit","currentForm","insertBefore","children","first","regexp","contents","filter","nodeType","nodeValue","replaceWith","ViewSharedLayoutPrimaryList"],"mappings":"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","file":"site.min.js","sourcesContent":["\r\n\r\n//NOTE: The layout should have the constant GLOBALROOTURL defined - Used for transferring data from server-side to client side via APIs\r\n\r\n\r\nclass Apfco {\r\n\r\n    static updateQueryString(key, value, url) { //Update query string parameters - Taken from here: https://stackoverflow.com/questions/5999118/add-or-update-query-string-parameter\r\n        if (!url) url = window.location.href;\r\n        var re = new RegExp(\"([?&])\" + key + \"=.*?(&|#|$)(.*)\", \"gi\"),\r\n            hash;\r\n\r\n        if (re.test(url)) {\r\n            if (typeof value !== 'undefined' && value !== null)\r\n                return url.replace(re, '$1' + key + \"=\" + value + '$2$3');\r\n            else {\r\n                hash = url.split('#');\r\n                url = hash[0].replace(re, '$1$3').replace(/(&|\\?)$/, '');\r\n                if (typeof hash[1] !== 'undefined' && hash[1] !== null)\r\n                    url += '#' + hash[1];\r\n                return url;\r\n            }\r\n        }\r\n        else {\r\n            if (typeof value !== 'undefined' && value !== null) {\r\n                var separator = url.indexOf('?') !== -1 ? '&' : '?';\r\n                hash = url.split('#');\r\n                url = hash[0] + separator + key + '=' + value;\r\n                if (typeof hash[1] !== 'undefined' && hash[1] !== null)\r\n                    url += '#' + hash[1];\r\n                return url;\r\n            }\r\n            else\r\n                return url;\r\n        }\r\n    }\r\n\r\n    static stripQueryStringAndHashFromUrl(url) { //Example, changes http://localhost:61222/?test=123#NavContent to http://localhost:61222/ - From https://stackoverflow.com/questions/2540969/remove-querystring-from-url\r\n        return url.split(/[?#]/)[0];\r\n    }\r\n\r\n    static sleep(milliseconds) { //Use in async functions to insert a delay before continuing processing. Example: await Apfco.Sleep(2000);\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, milliseconds);\r\n        });\r\n    }\r\n\r\n    static replaceAll(inputString, findString, replaceString) { //Replace all instances of a value in a string - native string.replace() only works on first instance\r\n        let inputStringRegEscaped = inputString.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\r\n        return inputString.replace(new RegExp(findString, 'g'), replaceString);\r\n    }\r\n\r\n}","class IFormFile {\r\n\r\n    //Variables\r\n    el;\r\n    elTable;\r\n    elType;\r\n    elMaximum;\r\n    elProgress;\r\n    elRequired;\r\n\r\n    //Methods\r\n    constructor(target) {\r\n        let thisObj = this;\r\n\r\n        //Assign elements\r\n        this.el = $(target);\r\n        this.elTable = document.getElementById(target.id + \"Table\");\r\n        this.elType = document.getElementById(target.id).getAttribute(\"filetype\");\r\n        this.elMaximum = document.getElementById(target.id).getAttribute(\"maximum\");\r\n        this.elProgress = document.getElementById(target.id + \"Progress\");\r\n        this.elRequired = $(target).attr('required') != null;\r\n\r\n        //Assign events\r\n        $(target).change(function (e) {\r\n            var count = thisObj.elTable.getElementsByTagName('tbody')[0].querySelectorAll('.table-item').length;\r\n            if (count < thisObj.elMaximum) {\r\n                var file = document.getElementById(e.target.id).files[0];\r\n                var data = new FormData();\r\n                data.append('file', file);\r\n                data.append('type', thisObj.elType);\r\n                thisObj.Action_uploadfile(data);\r\n            }\r\n        }).click(function () {\r\n            $(this).val(\"\");\r\n            $(this.elProgress).css(\"width\", \"0%\");\r\n        });\r\n        for (let i = 0; i < $('.customfile-action').length; i++) {\r\n            let id = $('.customfile-action')[i].id;\r\n            $('#' + id).on('click', function (event) {\r\n                thisObj.Action_deletefile(i + 1, id);\r\n            });\r\n        }\r\n        thisObj.HTML_updatebutton();\r\n    }\r\n\r\n    Action_uploadfile(data) {\r\n        let thisObj = this;\r\n        let el = this.el;\r\n        let elProgress = this.elProgress;\r\n\r\n        el.prop('disabled', true);\r\n\r\n        //Append AntiForgeryToken to payload\r\n        var token = $('input[name=\"__RequestVerificationToken\"]').val();\r\n        data.append('__RequestVerificationToken', token);\r\n\r\n        //HTTP request to controller\r\n        $.ajax({\r\n            xhr: function () {\r\n                var xhr = new XMLHttpRequest();\r\n                $(elProgress).addClass(\"progress-bar-animated\");\r\n                xhr.upload.addEventListener(\"progress\", function (evt) {\r\n                    if (evt.lengthComputable) {\r\n                        var percentComplete = (evt.loaded / evt.total * 100) / 1.5;\r\n                        $(elProgress).css(\"width\", percentComplete + \"%\");\r\n                    }\r\n                }, false);\r\n                xhr.addEventListener(\"progress\", function (evt) {\r\n                    if (evt.lengthComputable) {\r\n                        var percentComplete = (evt.loaded / evt.total * 100);\r\n                        $(elProgress).css(\"width\", percentComplete + \"%\");\r\n                    }\r\n                }, false);\r\n                return xhr;\r\n            },\r\n            type: 'POST',\r\n            url: GLOBALROOTURL + '/ClientRequest/SaveFileUpload',\r\n            data: data,\r\n            processData: false,\r\n            contentType: false,\r\n            success: function (response) {\r\n                //Add file to Table\r\n                data.append('uniqueid', response);\r\n                thisObj.HTML_addfiletotable(data);\r\n                $(elProgress).css(\"width\", \"100%\");\r\n                window.setTimeout(function () {\r\n                    $(elProgress).css(\"width\", \"0%\");\r\n                    $(elProgress).removeClass(\"progress-bar-animated\");\r\n                    el.prop('disabled', false);\r\n                    thisObj.HTML_updatebutton();\r\n                }, 500);\r\n\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                $(elProgress).css(\"width\", \"100%\");\r\n                window.setTimeout(function () {\r\n                    $(elProgress).css(\"width\", \"0%\");\r\n                    $(elProgress).removeClass(\"progress-bar-animated\");\r\n                    el.prop('disabled', false);\r\n                    alert(xhr.responseText);\r\n                }, 500);\r\n            }\r\n        });\r\n    }\r\n\r\n    Action_deletefile(tableRow, id) {\r\n        let thisObj = this;\r\n\r\n        //Fetch the body of the table\r\n        let table = this.elTable.getElementsByTagName('tbody')[0];\r\n\r\n        //Initially delete the row\r\n        table.deleteRow((tableRow - 1));\r\n\r\n        //If there are no more rows insert default row\r\n        if (table.rows.length === 0) {\r\n            var newRow = table.insertRow(table.rows.length);\r\n            newRow.outerHTML = '<tr class=\"table-row\"><th scope= \"row\"></th ><td></td><td><button type=\"button\" class=\"customfile-action-none\" disabled ><i class=\"fa fa-trash-alt\"></i></button></td></tr >';\r\n        } else {\r\n            //Update existing rows with correct ids and attributes\r\n            thisObj.HTML_updaterows();\r\n        }\r\n\r\n        //Instantiate payload to send to controller\r\n        var data = new FormData();\r\n        data.append('id', id);\r\n\r\n        //Append AntiForgeryToken to payload\r\n        var token = $('input[name=\"__RequestVerificationToken\"]').val();\r\n        data.append('__RequestVerificationToken', token);\r\n\r\n        //Send a request to remove that file from the file uploads\r\n        $.ajax({\r\n            type: 'POST',\r\n            url: GLOBALROOTURL + '/ClientRequest/DeleteFileUpload',\r\n            contentType: \"application/json; charset=utf-8\",\r\n            data: data,\r\n            processData: false,\r\n            contentType: false,\r\n            success: function () {\r\n                //File was removed\r\n                thisObj.HTML_updatebutton();\r\n            },\r\n            error: function (xhr, ajaxOptions, thrownError) {\r\n                //File was not found\r\n                alert(thrownError);\r\n            }\r\n        });\r\n    }\r\n\r\n    HTML_addfiletotable(data) {\r\n        let thisObj = this;\r\n\r\n        //Fetch the body of the table\r\n        var table = this.elTable.getElementsByTagName('tbody')[0];\r\n\r\n        //Delete table row if its the starting row\r\n        if (table.rows[0].cells[1].innerHTML.trim() === '') {\r\n            table.deleteRow(0);\r\n        }\r\n\r\n        table = this.elTable.getElementsByTagName('tbody')[0];\r\n        var newRow = table.insertRow(table.rows.length);\r\n        newRow.outerHTML = '<tr class=\"table-row table-item\"><th scope=\"row\">' + table.rows.length + '</th ><td>' + data.get('file').name + '</td><td><button type=\"button\" class=\"customfile-action\" id=\"' + data.get('uniqueid') + '\"><i class=\"fa fa-trash-alt\"></i></button></td></tr >';\r\n        let tableRow = table.rows.length;\r\n        let id = data.get('uniqueid');\r\n        $('#' + id).on('click', function (event) {\r\n            thisObj.Action_deletefile(tableRow, id);\r\n        });\r\n    }\r\n\r\n    HTML_updaterows() {\r\n        let thisObj = this;\r\n\r\n        //Fetch the body of the table\r\n        var table = this.elTable.getElementsByTagName('tbody')[0];\r\n\r\n        //Loops through existing rows and changes Id and onlick function attributes\r\n        for (let i = 0; i < table.rows.length; i++) {\r\n\r\n            //Replace table Id with correct number\r\n            table.rows[i].cells[0].innerHTML = i + 1;\r\n\r\n            //Grab the file Id that was an attribute in the delete method.\r\n            let id = table.rows[i].cells[2].firstChild.getAttribute('id').toString();\r\n\r\n            //Assign the fetched file Id to the inner HTML\r\n            table.rows[i].cells[2].innerHTML = '<button type=\"button\" class=\"customfile-action\" id=\"' + id + '\"><i class=\"fa fa-trash-alt\"></i></button>';\r\n            $('#' + id).off('click');\r\n            $('#' + id).on('click', function (event) {\r\n                thisObj.Action_deletefile(i + 1, id);\r\n            });\r\n        }\r\n    }\r\n\r\n    HTML_updatebutton() {\r\n        let thisObj = this;\r\n        var count = thisObj.elTable.getElementsByTagName('tbody')[0].querySelectorAll('.table-item').length;\r\n\r\n        if (count >= thisObj.elMaximum) {\r\n            thisObj.el.prop('disabled', true);\r\n        }\r\n        else {\r\n            thisObj.el.prop('disabled', false);\r\n        }\r\n\r\n        //Workaround for client-side issue: file upload input is required but data is retrieved from the session and cannot set the value of the input (due to security reasons)\r\n        if (this.elRequired) {\r\n            if (count > 0) {\r\n                thisObj.el.prop('required', false);\r\n            }\r\n            else {\r\n                thisObj.el.prop('required', true);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//Instantiate on page load if matching HTML is found\r\nlet IFormFileList = [];\r\n$(function () {\r\n    let elementsByClass = document.getElementsByClassName(\"IFormFile\");\r\n    for (let i = 0; i < elementsByClass.length; i++) {\r\n        IFormFileList.push(new IFormFile(elementsByClass.item(i)));\r\n    };\r\n});","class ViewHomeEntryForm {\r\n\r\n    //Methods\r\n    constructor(target) {\r\n        this.target = target;\r\n        console.log('GLOBALROOTURL: ' + GLOBALROOTURL);\r\n        console.log('View initialized');\r\n        //this.sleepTest();\r\n    }\r\n\r\n    async sleepTest() {\r\n        console.log('Sleep test A');\r\n        await Apfco.sleep(2000);\r\n        console.log('Sleep test B');\r\n        await Apfco.sleep(2000);\r\n        console.log('Sleep test C');\r\n    }\r\n}\r\n\r\n//Instantiate on page load if matching HTML is found\r\nlet ViewHomeEntryFormList = [];\r\n$(function () {\r\n    if (document.body.classList.contains('cHome') && document.body.classList.contains('aEntryForm')) {\r\n        let elementsByClass = document.getElementsByClassName(\"viewWrapper\");\r\n        for (let i = 0; i < elementsByClass.length; i++) {\r\n            ViewHomeEntryFormList.push(new ViewHomeEntryForm(elementsByClass.item(i)));\r\n        };\r\n    }\r\n});","class ViewSharedLayoutPrimary {\r\n\r\n    //Variables\r\n    target;\r\n\r\n\r\n    //Methods\r\n    constructor(target) {\r\n        let thisObj = this;\r\n        this.target = target;\r\n        this.disableFormButtonsOnSubmit();\r\n        this.wrapTrademarkSymbolsWithSuperscriptTag();\r\n        console.log('LayoutPrimary initialized');\r\n    }\r\n\r\n    disableFormButtonsOnSubmit() {\r\n        //Make it so every submit button found in every form on the site is diabled when the form is submitted (solves numerous issues)\r\n        //Fixes include the \"The provided anti-forgery token was meant for user \"\", but the current user is \"ACT-2JFD6AMVSN7C\".\" which is caused by users double-clicking on the login button\r\n        //Note that this is NOT for security, as users can diable JS. This is only for avoiding user-unfriendly or confusing error messages\r\n        $(this.target).find('form').each(function () {\r\n            $(this).submit(function (event) {\r\n                $(this).find(':input[type=submit]').each(function () {\r\n                    if (!$(this).attr('apfDontDisableOnSubmit')) { //Don't disable if the apfDontDisableOnSubmit=\"true\" attribute exists on the button\r\n                        $(this).prop('disabled', true);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        $(this.target).find('form').each(function () {\r\n            let currentForm = this; //Get the current form\r\n            $(this).find(':input[type=submit]').each(function () {\r\n                if (!$(this).attr('apfDontDisableOnSubmit')) { //Don't disable if the apfDontDisableOnSubmit=\"true\" attribute exists on the button\r\n                    $(this).click(function (event) {\r\n                        $('<input>').attr({ //Create a hidden property for the clicked button to submit along with the form. Solves the issue with disabled buttons not getting submitted. This way you can find which button was clicked\r\n                            type: 'hidden',\r\n                            name: $(this).attr('name'),\r\n                            value: $(this).val()\r\n                        }).insertBefore($(currentForm).children().first()); //Append to the start of the current form, instead of next to the button itself or the end of the form. Otherwise it may mess with any last-child CSS selectors\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    wrapTrademarkSymbolsWithSuperscriptTag() {\r\n        //Wrap all registered trademark symbols with <sup>, as it applies to almost every design mockup we receive - see here https://stackoverflow.com/questions/19364581/adding-superscript-sup-tags-around-all-trademark-and-registered-trademark-symb\r\n        let regexp = /[\\xAE]/;\r\n        $('body :not(script,sup)').contents().filter(function () {\r\n            return this.nodeType === 3 && (regexp.test(this.nodeValue));\r\n        }).replaceWith(function () {\r\n            return this.nodeValue.replace(regexp, '<sup>$&</sup>');\r\n        });\r\n        $('body :not(script,sup)').contents().filter(function () {\r\n            return this.nodeType === 3;\r\n        }).replaceWith(function () {\r\n            return this.nodeValue.replace(/[™®©]/g, '<sup>$&</sup>');\r\n        });\r\n    }\r\n}\r\n\r\n//On page load, take all found elements with the classname and create objects for them to initialize\r\nlet ViewSharedLayoutPrimaryList = [];\r\n$(function () {\r\n    let elementsByClass = document.getElementsByClassName(\"LayoutPrimary\");\r\n    for (let i = 0; i < elementsByClass.length; i++) {\r\n        ViewSharedLayoutPrimaryList.push(new ViewSharedLayoutPrimary(elementsByClass.item(i)));\r\n    };\r\n});"]}